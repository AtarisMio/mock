:root {
    --button-secondary-color: #000;
    --button-fab-color-alt: #ff4081;
    --button-fab-text-color-alt: #fff;
    --button-fab-hover-color-alt: #ff4081;
    --button-fab-active-color-alt: #ff4081;
    --button-fab-ripple-color-alt: #fff;
    --button-hover-color: rgba(158, 158, 158, .2);
    --button-hover-color-alt: #3f51b5;
    --button-focus-color: rgba(0, 0, 0, .12);
    --button-active-color: rgba(158, 158, 158, .4);
    --button-active-color-alt: #3f51b5;
    --button-primary-color: rgba(158, 158, 158, .2);
    --button-primary-color-alt: #3f51b5;
    --button-primary-color-disabled: rgba(0, 0, 0, .12);
    --button-secondary-color-alt: #fff;
    --button-secondary-color-disabled: rgba(0, 0, 0, .26);
    --button-ripple-color-alt: #fff;
    --button-focus-color-alt: rgba(0, 0, 0, .12);
    --shadow-key-penumbra-opacity: rgba(0, 0, 0, .14);
    --shadow-key-umbra-opacity: rgba(0, 0, 0, .2);
    --shadow-ambient-shadow-opacity: rgba(0, 0, 0, .12);
    --button-min-width: 64px;
    --button-height: 36px;
    --button-padding: 16px;
    --button-margin: 4px;
    --button-border-radius: 2px;
    --button-fab-size: 56px;
    --button-fab-size-mini: 40px;
    --button-fab-font-size: 24px;
    --button-icon-size: 32px;
    --button-icon-size-mini: 24px;
    --animation-curve-fast-out-slow-in: cubic-bezier(0.4, 0, 0.2, 1);
    --animation-curve-linear-out-slow-in: cubic-bezier(0, 0, 0.2, 1);
    --animation-curve-fast-out-linear-in: cubic-bezier(0.4, 0, 1, 1);
    --animation-curve-default: var(--animation-curve-fast-out-slow-in);
}

.button {
    background: transparent;
    border: none;
    border-radius: var(--button-border-radius);
    color: var(--button-secondary-color);
    position: relative;
    height: var(--button-height);
    margin: 0;
    min-width: var(--button-min-width);
    padding: 0 var(--button-padding);
    display: inline-block;
    font-size: 14px;
    font-weight: 500;
    text-transform: uppercase;
    line-height: 1;
    letter-spacing: 0;
    overflow: hidden;
    will-change: box-shadow;
    transition: box-shadow 0.2s var(--animation-curve-fast-out-linear-in), background-color 0.2s var(--animation-curve-default), color 0.2s var(--animation-curve-default);
    outline: none;
    cursor: pointer;
    text-decoration: none;
    text-align: center;
    line-height: var(--button-height);
    vertical-align: middle;
    &::-moz-focus-inner {
        border: 0;
    }
    &:hover {
        background-color: var(--button-hover-color);
    }
    &:focus:not(:active) {
        background-color: var(--button-focus-color);
    }
    &:active {
        background-color: var(--button-active-color);
    }
}

input.button {
    -webkit-appearance: none;
}

.colored {
    color: var(--button-primary-color-alt);
    &:focus:not(:active) {
        background-color: var(--button-focus-color-alt);
    }
}

.raised {
    background: var(--button-primary-color);
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, var(--shadow-key-penumbra-opacity)), 0 3px 1px -2px rgba(0, 0, 0, var(--shadow-key-umbra-opacity)), 0 1px 5px 0 rgba(0, 0, 0, var(--shadow-ambient-shadow-opacity));
    &:active {
        box-shadow: 0 4px 5px 0 rgba(0, 0, 0, var(--shadow-key-penumbra-opacity)), 0 1px 10px 0 rgba(0, 0, 0, var(--shadow-ambient-shadow-opacity)), 0 2px 4px -1px rgba(0, 0, 0, var(--shadow-key-umbra-opacity));
        background-color: var(--button-active-color);
    }
    &:focus:not(:active) {
        box-shadow: 0 0 8px rgba(0, 0, 0, .18), 0 8px 16px rgba(0, 0, 0, .36);
        background-color: var(--button-active-color);
    }
}

.raised.colored {
    background: var(--button-primary-color-alt);
    color: var(--button-secondary-color-alt);
    &:hover {
        background-color: var(--button-hover-color-alt);
    }
    &:active {
        background-color: var(--button-active-color-alt);
    }
    &:focus:not(:active) {
        background-color: var(--button-active-color-alt);
    }
    & .mdl-ripple {
        background: var(--button-ripple-color-alt);
    }
}

.fab {
    border-radius: 50%;
    font-size: var(--button-fab-font-size);
    height: var(--button-fab-size);
    margin: auto;
    min-width: var(--button-fab-size);
    width: var(--button-fab-size);
    padding: 0;
    overflow: hidden;
    background: var(--button-primary-color);
    box-shadow: 0 1px 1.5px 0 rgba(0, 0, 0, 0.12), 0 1px 1px 0 rgba(0, 0, 0, 0.24);
    position: relative;
    line-height: normal;
    & .material-icons {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(calc(var(--button-fab-font-size) / 2 * -1), calc(var(--button-fab-font-size) / 2 * -1));
        line-height: var(--button-fab-font-size);
        width: var(--button-fab-font-size);
    }
    &.mini-fab {
        height: var(--button-fab-size-mini);
        min-width: var(--button-fab-size-mini);
        width: var(--button-fab-size-mini);
    }
    & .ripple-container {
        border-radius: 50%;
        -webkit-mask-image: -webkit-radial-gradient(circle, white, black);
    }
    &:active {
        box-shadow: 0 4px 5px 0 rgba(0, 0, 0, var(--shadow-key-penumbra-opacity)), 0 1px 10px 0 rgba(0, 0, 0, var(--shadow-ambient-shadow-opacity)), 0 2px 4px -1px rgba(0, 0, 0, var(--shadow-key-umbra-opacity));
        background-color: var(--button-active-color);
    }
    &:focus:not(:active) {
        box-shadow: 0 0 8px rgba(0, 0, 0, .18), 0 8px 16px rgba(0, 0, 0, .36);
        background-color: var(--button-active-color);
    }
}

.fab.colored {
    background: var(--button-fab-color-alt);
    color: var(--button-fab-text-color-alt);
    &:hover {
        background-color: var(--button-fab-hover-color-alt);
    }
    &:focus:not(:active) {
        background-color: var(--button-fab-active-color-alt);
    }
    &:active {
        background-color: var(--button-fab-active-color-alt);
    }
    & .mdl-ripple {
        background: var(--button-fab-ripple-color-alt);
    }
}

.icon {
    border-radius: 50%;
    font-size: var(--button-fab-font-size);
    height: var(--button-icon-size);
    margin-left: 0;
    margin-right: 0;
    min-width: var(--button-icon-size);
    width: var(--button-icon-size);
    padding: 0;
    overflow: hidden;
    color: inherit;
    line-height: normal;
    & .material-icons {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(calc(var(--button-fab-font-size) / 2 * -1), calc(var(--button-fab-font-size) / 2 * -1));
        line-height: var(--button-fab-font-size);
        width: var(--button-fab-font-size);
    }
    &.mdl-button--mini-icon {
        height: var(--button-icon-size-mini);
        min-width: var(--button-icon-size-mini);
        width: var(--button-icon-size-mini);
        & .material-icons {
            top: calc((var(--button-icon-size-mini) - var(--button-fab-font-size)) / 2);
            left: calc((var(--button-icon-size-mini) - var(--button-fab-font-size)) / 2);
        }
    }
    & .mdl-button__ripple-container {
        border-radius: 50%; // Fixes clipping bug in Safari.
        -webkit-mask-image: -webkit-radial-gradient(circle, white, black);
    }
}

.ripple-container {
    display: block;
    height: 100%;
    left: 0px;
    position: absolute;
    top: 0px;
    width: 100%;
    z-index: 0;
    overflow: hidden;
    .button[disabled] & .ripple {
        background-color: transparent;
    }
}

.primary.primary {
    color: var(--button-primary-color-alt);
    & .ripple {
        background: var(--button-secondary-color-alt);
    }
    &.raised,
    &.fab {
        color: var(--button-secondary-color-alt);
        background-color: var(--button-primary-color-alt);
    }
}

.accent.accent {
    color: var(--button-fab-color-alt);
    & .ripple {
        background: var(--button-fab-text-color-alt);
    }
    &.raised,
    &.fab {
        color: var(--button-fab-text-color-alt);
        background-color: var(--button-fab-color-alt);
    }
}

.button {
    // Bump up specificity by using [disabled] twice.
    &[disabled][disabled] {
        color: var(--button-secondary-color-disabled);
        cursor: default;
        background-color: transparent;
    }
    &.fab {
        // Bump up specificity by using [disabled] twice.
        &[disabled][disabled] {
            background-color: var(--button-primary-color-disabled);
            color: var(--button-secondary-color-disabled);
        }
    }
    &.raised {
        // Bump up specificity by using [disabled] twice.
        &[disabled][disabled] {
            background-color: var(--button-primary-color-disabled);
            color: var(--button-secondary-color-disabled);
            box-shadow: none;
        }
    }
    &.colored {
        // Bump up specificity by using [disabled] twice.
        &[disabled][disabled] {
            color: var(--button-secondary-color-disabled);
        }
    }
}

.button .icons {
    vertical-align: middle;
}